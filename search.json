[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BM923 Synthetic Biology Workshop",
    "section": "",
    "text": "Preface\nThis is a Quarto book, written to accompany the BM923 Bioprocessing workshop on Synthetic Biology. This book will go through the 4 worked examples mentioned in the workshop:",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#how-to-use-this-book",
    "href": "index.html#how-to-use-this-book",
    "title": "BM923 Synthetic Biology Workshop",
    "section": "How to use this book:",
    "text": "How to use this book:\nYou can navigate this book using the links provided in the sidebar at the left, or by using the arrows at the bottom right of each page to progress.\nYou can work through the four examples in any order.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#requirements-for-this-workshop",
    "href": "index.html#requirements-for-this-workshop",
    "title": "BM923 Synthetic Biology Workshop",
    "section": "Requirements for this workshop:",
    "text": "Requirements for this workshop:\nYou will need to sign up for a free Benchling account for this workshop.\nYou should be able to use most internet web browsers to complete this workshop, but please note that it was written and tested using Google Chrome. If you encounter issues with using another browser, consider switching to a different browser and please also inform Dr. Feeney of the issue (with a detailed description of what went wrong).",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#any-issues",
    "href": "index.html#any-issues",
    "title": "BM923 Synthetic Biology Workshop",
    "section": "Any issues?",
    "text": "Any issues?\nThis Quarto book is hosted in GitHub; if you encounter any issues (typos, broken links, technical issues), or have any suggestions for improving this workshop, please kindly raise a GitHub issue or speak with Dr. Feeney directly.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "adpA.html",
    "href": "adpA.html",
    "title": "1  AdpA",
    "section": "",
    "text": "1.1 Cloning adpA (antibiotic biosynthesis regulator) for overexpression in Streptomyces spectabilis (Restriction Enzyme-based cloning)\nWe wish to clone a regulator of antibiotic biosynthesis (adpA) under control of an inducible promoter (tcpp), in order to overexpress it to different levels and determine whether we can create strains that produce higher titers of antibiotics. This document outlines the steps that are necessary to construct the desired vector: you should follow along in your Benchling account.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>AdpA</span>"
    ]
  },
  {
    "objectID": "adpA.html#cloning-adpa-antibiotic-biosynthesis-regulator-for-overexpression-in-streptomyces-spectabilis-restriction-enzyme-based-cloning",
    "href": "adpA.html#cloning-adpa-antibiotic-biosynthesis-regulator-for-overexpression-in-streptomyces-spectabilis-restriction-enzyme-based-cloning",
    "title": "1  AdpA",
    "section": "",
    "text": "1.1.1 Identify the Streptomyces spectabilis adpA gene\nWe first need to identify the adpA gene sequence from S. spectabilis, the organism that we are working with.\nWe can do this using BLAST. An appropriate query in this case would be the adpA gene sequence from a better-characterised Streptomyces species, such as Streptomyces coelicolor A3(2).\nWe can retrieve this sequence from a database, such as StrepDB1 - other databases (such as NCBI) would work just as well.\n\nNavigate to StrepDB and search for the adpA gene (Figure 1.1). (Enter “adpA” in the search bar at the top left and click “Search Genes”).\n\n\n\n\n\n\n\nFigure 1.1: The StrepDB database\n\n\n\n\nA pop-up should appear (“SCO2792 araC-family transcriptional regulator” - click on that link to be redirected to the page for the adpA gene - Figure 1.2)\n\n\n\n\n\n\n\nFigure 1.2: The page for adpA in StrepDB\n\n\n\n\nRead through the page to check that you have the correct gene, then click the button “Nt seq” to retrieve the adpA nucleotide sequence. (Keep 0 for the amount of flanking region - you only want the sequence of the gene itself.)\n\nSelect the entire sequence of the gene (Figure 1.3) and copy it (either using Ctrl+C or right-click and select “Copy” from the menu).\n\n\n\n\n\n\nFigure 1.3: The adpA nucleotide sequence from StrepDB\n\n\n\n\nNavigate to the NCBI BLAST page and click on “Nucleotide BLAST”.\nOn the BLASTn page, paste the sequence you acquired from StrepDB into the “Query” sequence box.\n\nUnder “Choose Search Set”, keep the database as “Standard databases (nr etc)” and specify the organism (if you begin typing the name of your species (Streptomyces spectabilis), a menu should automatically appear with suggested search terms. We want to select “Streptomyces spectabilis (taxid:68270)) (Figure 1.4).\n\n\n\n\n\n\nFigure 1.4: Using BLAST to find the adpA homolog in Streptomyces spectabilis\n\n\n\nClick the blue “BLAST” button and wait for your results.\n\nExamine the alignments. For the ATCC 27465 strain (the one we are working with), click on the “Genbank” link next to the range numbers (Figure 1.5).\n\n\n\n\n\n\n\nFigure 1.5: BLAST hit results - with the link to the Genbank range for this hit circled in red.\n\n\n\n\nCheck that this has taken you to the correct sequence (Streptomyces spectabilis sequence, product annotated as a helix-turn-helix domain-containing protein) and click the link to view the “FASTA” formatted sequence (Figure 1.6). Copy this sequence (Figure 1.7).\n\n\n\n\n\n\n\nFigure 1.6: The nucleotide sequence for the adpA homolog from Streptomyces spectabilis, with the link to the FASTA-formatted sequence highlighted in red\n\n\n\n\n\n\n\n\n\nFigure 1.7: The FASTA sequence of the Streptomyces spectabilis adpA gene highlighted\n\n\n\n\n\n1.1.2 Import Sequences into Benchling\n\nIn Benchling, create a new Project to organise your work. Click the + icon and select “Project” ((adpA8?)). Give your project an informative name and description (this will help you in the future, especially if you have multiple projects or complex work schemes.)\n\n\n\n\n\n\n\nFigure 1.8: Starting a new Benchling project\n\n\n\n\nIn your new project, click the + icon again. This time, add a new DNA/RNA sequence (Figure 1.9).\n\n\n\n\n\n\n\nFigure 1.9: Adding a new DNA/RNA sequence in Benchling\n\n\n\nGive the molecule an informative name, specify the type (DNA),topology (Linear), and project folder (your new project folder). Paste the sequence you obtained from NCBI into “Bases” and click “Create” (Figure 1.10).\n\n\n\n\n\n\nFigure 1.10: Create a DNA/RNA sequence in Benchling\n\n\n\n\nNow, to check that your sequence is correct, you should perform the following checks:\n\nA. Check the translation of this sequence - select the entire sequence, click “Create” &gt; “translation” &gt; “Forward” (Figure 1.11).\n\n\n\n\n\n\nFigure 1.11: Adding a translation to your adpA sequence in Benchling\n\n\n\nGive the translation a name (e.g., AdpA) and click “Save). The amino acid sequence should now appear under the nucleotide sequence (Figure 1.12). Check that there are no premature stop codons.\n\n\n\n\n\n\nFigure 1.12: The adpA sequence with added translation\n\n\n\nB. Compare the sequence against the Streptomyces coelicolor genome using BLAST (ensure that this is in fact the adpA homolog).\n\nNext, you will need to import the sequence of the vector we are using (pMS17).\n\nClick the + icon again &gt; DNA/RNA sequence &gt; Import DNA/RNA sequences (Figure 1.13).\n\n\n\n\n\n\nFigure 1.13: Importing a DNA/RNA sequence in Benchling\n\n\n\nSearch for pMS17 in the addgene database (Figure 1.14).\n\n\n\n\n\n\nFigure 1.14: Searching for pMS17 in the addgene website\n\n\n\nClick on the record for pMS17 and copy the URL for this page (https://www.addgene.org/127088/).\nIn Benchling, under “Import from database”, copy this URL into the search bar and click “Search” (Figure 1.15)\n\n\n\n\n\n\nFigure 1.15: Searching for pMS17 using its addgene URL\n\n\n\nThis should bring up the correct record for pMS17, click “Import” (Figure 1.16).\n\n\n\n\n\n\nFigure 1.16: Importing pMS17 into Benchling\n\n\n\n\n\n1.1.3 Identify the restriction enzymes we can use for cloning adpA into pMS17\n\nWe need to clone downstream of the tet operator (so that the gene is expressed under control of this promoter). You can see the multiple cloning site (MCS) here by clicking on “Plasmid” and zooming in to look at the MCS (Figure 1.17)\n\n\n\n\n\n\n\nFigure 1.17: The pMS17 multiple cloning site\n\n\n\nIn this case, XbaI, EcoRV, NsiI, or KpnI look like possible choices.\nConfirm that these enzymes each only cut the vector once (click on the scissors icon in the right-hand pane and start typing an enzyme name - as shown in Figure 1.18, for XbaI, which only cuts once.)\n\n\n\n\n\n\nFigure 1.18: Checking the restriction enzyme cutting patterns in pMS17\n\n\n\n\nCheck whether any of these enzymes cut the adpA sequence (if they do, we would not be able to use them for cloning in this way.)\n\nIn the adpA sequence, again click on the scissors icon on the right, and check each of the enzymes - as you see in Figure 1.19, KpnI does cut the sequence, and so must be avoided.\n\n\n\n\n\n\nFigure 1.19: KpnI restriction sites in the adpA sequence\n\n\n\nCheck whether the enzymes are compatible with one another using the NEB double digest checker. As you see in Figure 1.20, XbaI and EcoRV don’t have 100% activity in any of the NEB buffers (if you were using enzymes from another company, you would use their catalog/enzyme materials instead.) Similarly, XbaI and NsiI don’t have full activity in any of the buffers. However, EcoRV and NsiI have full activity in buffer r3.1 - so we will choose these two enzymes. (Note from the map of the NCS, EcoRV should be used for the forward primer and NsiI for the reverse primer.)\n\n\n\n\n\n\nFigure 1.20: NEB double digest selector results for XbaI and EcoRV\n\n\n\n\n\n1.1.4 Design primers to amplify adpA with the desired restriction enzyme sites\n\nSelect the first 20-25 bases of the adpA sequence to create your forward primer (if possible, end on a C or a G nucleotide). Click create &gt; Primer &gt; Forward (Figure 1.21).\n\n\n\n\n\n\n\nFigure 1.21: Creating the adpA forward primer\n\n\n\nIn the primer design window that pops up, use the menu to select EcoRV to look up the cut site (GATATC) (Figure 1.22)\n\n\n\n\n\n\nFigure 1.22: Adding the EcoRV cut site to the adpA forward primer\n\n\n\nCopy and paste the GATATC EcoRV cut site at the beginning (5’ end) of your primer. You will also need to add some bases upstream of the EcoRV sequence (most restriciton enzymes do not cut well at the very end of a DNA fragment - you can look up the precise amount of overhang needed at NEB’s “Cleavage Close to the end of DNA Fragments” guide). (Note that the sequence you add here does not matter, as it will be cleaved away and not included in part of your final product - though of course it is best to avoid duplicating the restriction enzyme site itself.)\nBe sure to adjust the overhang to match the number of bases you have added (in this case, 14 - Figure 1.23)\n\n\n\n\n\n\nFigure 1.23: Adding an overhang to the adpA forward primer\n\n\n\nGive the primer an informative name and click “Save Primer”, being sure to save it in the correct Project folder. It should now appear in your adpA sequence, as shown in Figure 1.24.\n\n\n\n\n\n\nFigure 1.24: The adpA forward primer\n\n\n\n\nRepeat the above process to create your reverse primer, being sure to specify “Reverse” primer when you create it, and to choose the correct enzyme (NsiI)\nLink the two primers and perform an in silico PCR.\n\nThis is necessary so that we can use the two primers to perform in silico PCR with them.\nClick on the forward primer, then press the “Shift” key and then click on the reverse primer. This should highlight the primers and the sequence between them (Figure 1.25).\n\n\n\n\n\n\nFigure 1.25: Linking the adpA primers to create an in silico PCR product\n\n\n\nRight click on the highlighted sequence, and then from the pop-up menu, select “Link primers”\nThis should give you a pop-up menu, showing that the two primers are linked. Click on “Create PCR Product”.\nIn the pop-up menu, be sure that “Use primer bases instead of sequence (includes overhang if any)” is selected, and you will probably also wish to copy over “Annotations, translations, and primers” to preserve the translation that you entered earlier (Figure 1.26). Click “Copy”, and be sure to save the copy in the correct Project folder.\n\n\n\n\n\n\nFigure 1.26: Creating the adpA in silico PCR product\n\n\n\n\n\n1.1.5 Perform in silico restriction digests\n\nDigest the insert sequence\n\nIn the adpA sequence, click the scissors icon, and then select the two enzymes that you wish to use to cut this sequence (EcoRV and NsiI) (Figure 1.27)\n\n\n\n\n\n\nFigure 1.27: Digesting the in silico PCR product with EcoRV and NsiI\n\n\n\nClick “Run digest”. This should generate 3 fragments (the tiny end overhangs, which are cut away, and the 1319 nucleotide fragment which contains the adpA sequence that we are cloning into pMS17. (Figure 1.28))\n\n\n\n\n\n\nFigure 1.28: Products generated from the in silico restriction digest\n\n\n\n\nSimilarly, cut the pMS17 vector with EcoRV and NsiI - this should generate two fragments (a small 13 nt portion of the MCS, which is being cut away, and the larger (5876 nt) part of the vector, which we are cloning into - Figure 1.29).\n\n\n\n\n\n\n\nFigure 1.29: Products from the in silico digest of pMS17 with EcoRV and NsiI\n\n\n\n\n\n1.1.6 Ligate the DNA fragments together\nAt the bottom right hand corner of the screen, click “Assembly” and then “Assembly Wizard”. From the pop-up menu, select “Digest and Ligate” as your Assembly Strategy, and then click “Start” (Figure 1.30). This should open a preview of your untitled assembly at the bottom of the screen (Figure 1.31)\n\n\n\n\n\n\nFigure 1.30: Choosing an Assembly Strategy in the Benchling Assembly Wizard\n\n\n\n\n\n\n\n\n\nFigure 1.31: Preview of an untitled assembly in Benchling\n\n\n\nEnsure that you have selected the correct (larger) fragment of pMS17 that you wish to use for this cloning project. Click on “Backbone” in this preview, and then “Set from selection”.\npMS17 (5.9kb, cut by NsiI and EcoRV) should now appear in your assembly as the backbone (Figure 1.32).\n\n\n\n\n\n\nFigure 1.32: pMS17 selected as the backbone of the assembly\n\n\n\nSimilarly, select and set your NsiI-EcoRV digested adpA fragment as the insert (Figure 1.33)\n\n\n\n\n\n\nFigure 1.33: adpA fragment selected as the insert in the assembly\n\n\n\nClick “Done”. Then give your assembly a name (e.g. pMS17-adpA), and ensure that you are saving it in the correct folder.\nThis should generate a plasmid map of your pMS17-adpA construct (Figure 1.34). Check to make sure your adpA sequence is present in the plasmid and in the correct orientation with regards to the tet promoter (annotated by addgene as the tet operator).\n\n\n\n\n\n\nFigure 1.34: The new pMS17-adpA plasmid map",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>AdpA</span>"
    ]
  },
  {
    "objectID": "adpA.html#footnotes",
    "href": "adpA.html#footnotes",
    "title": "1  AdpA",
    "section": "",
    "text": "a specialised database for Streptomyces genome information↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>AdpA</span>"
    ]
  },
  {
    "objectID": "pET.html",
    "href": "pET.html",
    "title": "2  PET hydrolase homolog cloning",
    "section": "",
    "text": "2.1 Cloning PET hydrolase homologs for heterologous expression in Pseudomonas (Gibson assembly)\nIn this example we will clone the pET hydrolase from Ideonella sakaiensis into an expression vector (pMMPc) with a strong constitutive promoter for expression in Pseudomonas putida, using Gibson assembly.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>PET hydrolase homolog cloning</span>"
    ]
  },
  {
    "objectID": "pET.html#cloning-pet-hydrolase-homologs-for-heterologous-expression-in-pseudomonas-gibson-assembly",
    "href": "pET.html#cloning-pet-hydrolase-homologs-for-heterologous-expression-in-pseudomonas-gibson-assembly",
    "title": "2  PET hydrolase homolog cloning",
    "section": "",
    "text": "2.1.1 Rationale for design choices\nStrain choice: Pseudomonas putida is tolerant to solvents, has a robust metabolism and capacity to withstand stresses, and has been used as a chassis organism for industrial biotechnology purposes previously, making it an ideal choice for our PET hydrolase expression system. (c.f. Weimer et al 2020 - https://doi.org/10.1007/s00253-020-10811-9)\nVector choice: Need a plasmid that will replicate in Pseudomonas, with a strong constitutive promoter. Xu et al (2013) created some appropriate vectors, c.f. doi: 10.1128/AEM.03746-12 - we will choose pMMPc (Genbank accession KC544266).\nChoice of PET hydrolase: Ideonella sakaiensis has been shown to degrade PET (and can use it as a sole carbon/energy source) doi:10.1126/science.aad6359. We will begin by cloning the well-characterized PET hydrolase from this organism (further optimisation of the hydrolase properties using gene engineering, or exploration of potentially more active/useful homologs may be necessary in the future).\n\n\n2.1.2 Obtaining the sequence for the PET hydrolase\n\nSearch the UniProt database for “PET hydrolase” (Figure 2.1).\n\n\n\n\n\n\n\nFigure 2.1: Searching the UniProt database\n\n\n\n\nClick on the search result that you want (in our case, the PET hydrolase from Ideonella sakaiensis/Piscinibacter sakaiensis). This should take you to the page for this protein, with information about its function, etc.\n\n\n\n\n\n\n\nFigure 2.2: The I. sakaiensis PET Hydrolase entry in UniProt\n\n\n\n\nThe uniprot accession # for this PET hydrolase is A0A0K8P6T7, which you will need to import the data into Benchling.\n\nIn Benchling, you may wish to start a new project (You can do this by clicking on the + icon in the left-hand toolbar, selecting “Project”, and then giving your new project an informative name and description, then clicking “Create project”.)\nTo import the sequence of the PET hydrolase, click on the + icon, then click AA sequence &gt; Import AA sequence (Figure 2.3)\n\n\n\n\n\n\nFigure 2.3: Importing an AA sequence into Benchling\n\n\n\nClick “Import from database”, specify the Accession number (A0A0K8P6T7), Database (UniProt), and Project folder (the folder you just created), then click “Import” (Figure 2.4).\n\n\n\n\n\n\nFigure 2.4: Specifying the Uniprot accession to import\n\n\n\nYou should then be able to open the imported sequence and observe the amino acid sequence and its features (Figure 2.5).\n\n\n\n\n\n\nFigure 2.5: The PET hydrolase sequence imported into Benchling\n\n\n\n\nYou will now need to create a reverse translation of the amino acid sequence to derive the coding sequence necessary for its production.\n\nSelect the entire sequence, right click on it, and then then click on “Back translate”.\nSpecify the options to optimize your back translation: you wish to codon optimize for expression in Pseudomonas putida, and you should add EcoRI as a cut site to avoid (we will be using this site to cut the plasmid for our Gibson assembly reaction.) (Figure 2.6)\n\n\n\n\n\n\nFigure 2.6: Specifying options to reverse translate/back translate the PET hydrolase AA sequence\n\n\n\nClick “Preview optimization” when you are happy with the settings, and then “Save as new sequence”, making sure to save it in the correct Project folder.\n\nQuality check and modify the sequence as necessary:\n\nA. Select the entirety of the sequence, then click Create &gt; Translation &gt; Forward to examine the translation of your new nucleotide sequence (Figure 2.7).\n\n\n\n\n\n\nFigure 2.7: The PET hydrolase sequence in Benchling, with translation added\n\n\n\nIn this case, note that while there is a start codon present, there is no stop codon - we need to add one.\nRight click at the end of the sequence, then select “Insert bases” and add a stop codon (any of the 3 stop codons is fine).\n\n\n\n\n\n\nFigure 2.8: Adding a stop codon to the sequence\n\n\n\nB. You may also wish to add an RBS at the beginning of the sequence (it doesn’t look like there is one present in the vector that we’re using). You can do this using the same method (right click, “Insert bases”, add the desired bases. You could use for example RBS 33 from Aparicio et al 2020, which has been shown to give high expression in P. putida (https://doi.org/10.1016/j.isci.2020.100946) - TAAGGAGGTAAAAACATATG (RBS underlined, start in bold))\n\n\n\n\n\n\nFigure 2.9: Adding an RBS to the sequence\n\n\n\nC. You can double-check that this sequence is correct by confirming (e.g., using BLASTx) that it matches the I. sakaiensis PET hydrolase protein.\nThis is the sequence that you would then have synthesized (e.g., by GenScript or another DNA synthesis company) for use in your Gibson assembly reaction.\n\n\n2.1.3 Obtaining the sequence for the plasmid\nThe NCBI accession number for the plasmid we wish to use is KC544266. You can import this into Benchling by clicking the + icon, then clicking DNA/RNA sequence &gt; Import DNA RNA sequences.\n\n\n\n\n\n\nFigure 2.10: Importing a DNA sequence into Benchling\n\n\n\nIn the pop-up window, click “Import from database” and paste or type the accession number into the “Sequence” box, then click “Search”, and then “Import” (Figure 2.11).\n\n\n\n\n\n\nFigure 2.11: Specifying an NCBI accession number to import\n\n\n\nThis should give you the plasmid sequence for the plasmid (Figure 2.12). Note the constitutive promoter (Pc) that we want to use for our cloning project. There is a multiple cloning site (MCS) just downstream of it, which contains EcoRI, BclI, AflIII etc. sites … we have chosen above to use the EcoRI site (but note that we could have chosen any of the sites in the MCS).\n\n\n\n\n\n\nFigure 2.12: Plasmid map of the vector imported into Benchling\n\n\n\nYou can confirm the presence of the EcoRI site manually as well (click on the scissors icon in the right-hand menu and then search for “EcoRI” (Figure 2.13).\n\n\n\n\n\n\nFigure 2.13: Confirming the EcoRI site in your imported vector sequence\n\n\n\n\n\n2.1.4 In silico design of your Gibson Assembly\n\nClick on “Assembly” in the bottom right hand corner of your screen &gt; “Assembly Wizard”, and then in the pop-up window Pick Assembly Strategy, select “Gibson” (Figure 2.14).\n\n\n\n\n\n\n\nFigure 2.14: Choosing an Assembly Strategy\n\n\n\nThis should bring up a message encouraging you to try the new combinatorial assembly tool - click that link.\n\nIn the pop-up menu, add the name of your plasmid that you are aiming to create (Tip: choose something informative, e.g. pMMPc-PET), and be sure to specify the correct project folder.\n\nCheck the other specifications: you are assembling two fragments, to create a circular construct, and you will be producing fragments by “Digest with restriction enzyme”. The defualts for min/max length and min Tm of your binding regions are fine.\nWhen you are happy with the specifications, click “Save” (Figure 2.15)\n\n\n\n\n\n\nFigure 2.15: Specifying DNA assembly parameters\n\n\n\nYou should now get an assembly tool that allows you to specify the fragments you will use (Figure 2.16).\n\n\n\n\n\n\nFigure 2.16: Specifying the DNA fragments to use in your assembly\n\n\n\nFor BIN 1 (Backbone), click the + symbol &gt; Open sequences &gt; KC544266 (Figure 2.17)\n\n\n\n\n\n\nFigure 2.17: Adding the vector backbone\n\n\n\nSpecify the 5’ enzyme and 3’ enzyme you will use (EcoRI) and the EcoRI site on the map as the Start and End sites (by clicking on View: Plasmid map to see the EcoRI site if necessary) (Figure 2.18), then click “Add”.\n\n\n\n\n\n\nFigure 2.18: Specifying the vector start and end and enzyme details\n\n\n\nFor BIN 2 (Insert 1), change the method to “Add new overlaps using PCR” and then click the + sign to add your fragment &gt; Open sequences &gt; the name of your codon optimized sequence (Figure 2.19).\n\n\n\n\n\n\nFigure 2.19: Adding the insert to your assembly\n\n\n\nThis should bring up your correct fragment to insert (Figure 2.20). Click “add”.\n\n\n\n\n\n\nFigure 2.20: Adding the insert fragment\n\n\n\nClick “Autopopulate” in the “Constructs” box (Figure 2.21), and then “Assemble” in the top right hand corner”.\n\n\n\n\n\n\nFigure 2.21: Autopopulate the constructs in your assembly\n\n\n\nWork through the Assemble DNA menu, specifying the folder where you would like to save your constructs, fragments, and primers (?fig-pet22).\n Examine your final construct (?fig-pet23) to verify the construct has placed your PET hydrolase gene in the correct orientation relative to the Pc promoter, and to see the sequences of the primers that you would need to order to carry out this Gibson assembly (?fig-pet24).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>PET hydrolase homolog cloning</span>"
    ]
  }
]